p4<- cbind(p3,c(90,78,94,70)) ; p4
data.frame(p2)
data.frame(p2, colname='이름')
colnames(p2,'이름름')
colnames(p2,'이름')
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
p2 <-c('이름','중간','기말') ; p2
data.frame(p2, colname='이름')
p2 <- data.frame(p2, colname='이름')
colnames(p2,'이름')
colname=p2,'이름'
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
p2 <- c('이름','중간','기말') ; p2
p2 <- data.frame(p2, colname='이름'); p2
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
p2 <- c('이름','중간','기말') ; p2
p2 <- data.frame(p2, colname='이름'); p2
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
p2 <- c('이름','중간','기말') ; p2
p2 < data.frame(p2)
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
p2 <- c('이름','중간','기말') ; p2
p2 <- data.frame(p2)
p2 <- data.frame(p2) ; p2
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
p2 <- c('강경학','김태균','이성열','정은원') ; p2
p2 <- data.frame(p2) ; p2
이름 <- data.frame(p2) ; p2
p2 <- data.frame(p2, colname='이름'); p2
p2 <- data.frame(p2, 중간=9, 78, 94, 70); p2
p2 <- data.frame(p2, 중간=90, 78, 94, 70); p2
이름 <- data.frame(p2) ; p2
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; p2
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; p2
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; 이름름
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; 이름
이름 <- data.frame(p2) ; 이름름
이름 <- data.frame(p2) ; 이름
p2 <- data.frame(p2, 중간=90, 78, 94, 70); p2
View(p2)
View(p2)
rm(list(p2))
rm=list(p2)
rm=list(이름름)
rm=list(이름)
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; 이름
이름 <- data.frame(p2) ; 이름
rm=list(이름)
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; 이름
이름 <- data.frame(p2) ; 이름
이름 <- data.frame(p2) ; 이름
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; 이름
p2 <- data.frame(이름) ; 이름
p2 <- data.frame(이름) ; p2
p2 <- data.frame(이름, 중간=90, 78, 94, 70); p2
p2 <- data.frame(이름) ; p2
p2 <- cbind(이름, 중간=90, 78, 94, 70); p2
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; 이름
p2 <- data.frame(이름) ; p2
p2 <- data.frame(이름) ; p2
p4<- cbind(p2,c(90,78,94,70)) ; p4
p4<- cbind(p2,name = 90,78,94,70) ; p4
p4<- cbind(p2, 90,78,94,70) ; p4
p4<- cbind(p2,c(90,78,94,70) ; p4
p4<- cbind(p2,c(90,78,94,70)) ; p4
colnames(p4,'중간')
row.names('이름','중간','기말')
row.names(p4,'이름','중간','기말')
p4
p4<- cbind(p2,c(90,78,94,70)) ; p4
p4<- cbind(p4,c(50,60,90,92)) ; p4
df = DataFrame([1000, 2000, 3000, 4000])
df = Data.Frame([1000, 2000, 3000, 4000])
df = Data.Frame(1000, 2000, 3000, 4000)
df = data.frame(1000, 2000, 3000, 4000)
df
df = index(1,2,3,4)
df = data.frame(1000, 2000, 3000, 4000), index(1,2,4,5)
df = data.frame(1000, 2000, 3000, 4000) #, index(1,2,4,5)
df
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학','김태균','이성열','정은원') ; 이름
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-list(c('강경학','김태균','이성열','정은원')) ; 이름
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-list(c('이름', '중간', '기말')) ; 이름
이름 < rbind(c('1','2','3'))
중간 <-c(90,78,94,70)
기말 <-c(50,60,90,92)
df_score <- data.frame(이름,중간,기말말)
df_score <- data.frame(이름,중간,기말)
df_score <- data.frame('이름','중간','기말')
df_scrre
df_score
df_score
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-c('이름', '중간', '기말')) ; 이름
rm=list()
View(이름)
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-c(이름, 중간, 기말)) ;
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-c('이름', '중간', '기말') ;
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-c('이름', '중간', '기말') ; 이름
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-c('이름', '강경학', '김태균', '이성열', '정은원') ; 이름
df_score <- data.frame('이름')
df_scroe
df_score
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-c('이름', '강경학', '김태균', '이성열', '정은원') ; 이름
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <-c('강경학', '김태균', '이성열', '정은원') ; 이름
data.frame('이름')
data.frame(이름)
df_score
data.frame(이름)
기말 <- c(50, 60, 90, 92)
중간 <- c(90, 78, 94, 70)
data.frame(이름, 중간, 기말말)
data.frame(이름, 중간, 기말)
df_score <- data.frame(이름, 중간, 기말)
df_score
# 위 자료에 평균이라는 필드를 추가하고 중간과 기말 시험의 평균을 구해서 평균이라는 필드에 할당하시오
df_score %>%
mutate(평균 = 중간 + 기말 / 2)
# 위 자료에 평균이라는 필드를 추가하고 중간과 기말 시험의 평균을 구해서 평균이라는 필드에 할당하시오
df_score %>%
mutate(평균 = (중간 + 기말) / 2)
df_score
df_score2
#  2-2) 위 자료에 평균이라는 필드를 추가하고 중간과 기말 시험의 평균을 구해서 평균이라는 필드에 할당하시오
df_score2 <-df_score %>%
mutate(평균 = (중간 + 기말) / 2)
df_score2
if(df_score2$평균[i] >=90) {
colors <- c(colors,"red") }
if(df_score2$평균 >=90) {
colors <- c(colors,"red") }
학점 <- c(학점,"B") })
]
df_score2 %>%
mutate(학점 = for (i in 1:length(df_score2$평균)) {
if(df_score2$평균[i] >=90) {
학점 <- c(학점,"A") }
else if(80 <=df_score2[i] <=90) {
학점 <- c(학점,"B") })
}
학점 <- c(학점,"B") })
else if(80 <=df_score2$평균[i] <=90) {
학점 <- c(학점,"B") })
학점 <- c(학점,"B") }
학점 <- c(학점,"B") }
}
oddSum <-for(i in 1:100) {
k <- if(i %% 3 = 0)
return(k)
}
return(i)
k <- if(i %% 3 = 0)
k <- i + if(i %% 3 = 0)
return(i)
k <- i + if(i %% 3 = 0)
i <- i + if(i %% 3 = 0)
i = i + if(i %% 3 = 0)
# 반복문 for
for(i in 1:10) {
print(i)
}
#1~100까지 3의 배수의 합
i <- 1
k = k + if(i %% 3 = 0)
oddSum <-for(k in 1:k) {
k = k + 3
return(k)
}
oddSum <-for(k in 1:k) {
k = k + 3
}
#1~100까지 3의 배수의 합
oddSum <-for(i in 1:i) {
i = i + 3
}
oddSum(10)
#1~100까지 3의 배수의 합
oddSum <-for(i in 1:i) {
i = i + 3
}
oddSum <-for(i in 1:i) {
i = i + 3
}
oddSum(10)
oddSum <-fucntion {
for(i in 1:i) {
i = i + 3
}
}
#1~100까지 3의 배수의 합
odd <- 0
i = odd + i
oddSum(10)
oddSum <-fucntion {
for(i in 1:i) {
if(i %% 3 = 0)
i = odd + i
}
}
#1~100까지 3의 배수의 합
sum <- 0
for(i in 1:100) {
if(i %% 3 = 0)
sum <- sum + i
}
print(sum)
#1~100까지 3의 배수의 합
sum <- 0
for(i in 1:100) {
if(i %% 3 = 0)
sum <- sum + i
}
oddSum = odd + i
oddSum <-fucntion {
for(i in 1:i) {
if(i %% 3 = 0)
oddSum = odd + i
}
}
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
}
for(i in 1:i) {
if(i %% 3 = 0)
oddSum = odd + i
}
for(i in 1:i) {
if(i %% 3 = 0)
i = odd + i
}
mpg
mpg1 <- mpg
mpg1 %>%
select(manufacturer == 'toyota')
mpg1 %>%
select(filter == 'toyota')
mpg1 %>%
select(mpg1, manufacturer == 'toyota')
mpg1 %>%
select(mpg1, manufacturer = 'toyota')
View(mpg)
mpg1 %>%
select(mpg1, manufacturer , 'toyota')
?dplyr()
?select()
mpg1 %>%
select(manufacturer == 'toyota')
mpg1 %>%
filter(manufacturer == 'toyota')
mpg1 %>%
filter(manufacturer == 'toyota') %>%
?select()
mpg1 %>%
filter(manufacturer == 'toyota') %>%
mutate(cty_avg = mean(cty), hwy_avg=mean(hwy))
mpg1 %>%
filter(manufacturer == 'toyota') %>%
group_by(model) %>%
mutate(cty_avg = mean(cty), hwy_avg=mean(hwy))
mpg1 %>%
filter(manufacturer == 'toyota') %>%
group_by(model) %>%
mutate(cty_hwy_avg = cty + hwy / 2)
mpg1 %>%
filter(manufacturer == 'toyota') %>%
group_by(model) %>%
mutate(cty_hwy_avg = cty + hwy / 2) %>%
arrange(desc(cty_hwy_avg))
mpg1 %>%
filter(manufacturer == 'toyota') %>%
mutate(cty_hwy_avg = cty + hwy / 2) %>%
arrange(desc(cty_hwy_avg))
mpg1 %>%
filter(manufacturer == 'toyota') %>%
mutate(cty_hwy_avg = cty + hwy / 2) %>%
arrange(desc(cty_hwy_avg)) %>%
head(3)
mpg1 %>%
filter(class == 'suv')
mpg1 %>%
filter(class == 'suv') %>%
mutate(cty = mean(cty))
mpg1 %>%
filter(class == 'suv') %>%
mutate(cty_avg = mean(cty))
mpg1 %>%
filter(class == 'suv') %>%
arrage(desc(cty)) %>%
haed(7)
mpg1 %>%
filter(class == 'suv') %>%
arrange(desc(cty)) %>%
haed(7)
mpg1 %>%
filter(class == 'suv') %>%
arrange(desc(cty)) %>%
head(7)
mpg2 <- mpg1 %>%
filter(class == 'suv') %>%
arrange(desc(cty)) %>%
head(7)
mpg2
ggplot(mpg2, aes(x = model, y= cty, fill = trans)) +
geom_bar(stat='identity')
ggplot(mpg2, aes(x = model, y= cty, fill = model)) +
geom_bar(stat='identity')
ggplot(mpg2, aes(x = model, y= cty, fill = model)) +
geom_bar(position= 'dodge',stat='identity')
mutate(cty = mean(cty))
mpg2 <- mpg1 %>%
filter(class == 'suv') %>%
group_by(manufacturer) %>%
mutate(cty = mean(cty)) %>%
arrange(desc(cty))
mpg2 <- mpg1 %>%
filter(class == 'suv') %>%
group_by(manufacturer) %>%
mutate(cty = mean(cty)) %>%
arrange(desc(cty)) %>%
head(7)
mpg2
mpg2 <- mpg1 %>%
group_by(manufacturer) %>%
filter(class == 'suv') %>%
mutate(cty = mean(cty)) %>%
arrange(desc(cty)) %>%
head(7)
mpg2
mpg2 <- mpg1 %>%
group_by(manufacturer) %>%
filter(class == 'suv') %>%
mutate(cty_avg = mean(cty)) %>%
arrange(desc(cty)) %>%
head(7)
mpg2
mpg2 <- mpg1 %>%
group_by(manufacturer) %>%
filter(class == 'suv') %>%
mutate(cty_avg = mean(cty)) %>%
arrange(desc(cty))
mpg2
summarise(avg = mean(cty) %>%
mpg2 <- mpg1 %>%
group_by(manufacturer) %>%
filter(class == 'suv') %>%
summarise(avg = mean(cty)) %>%
arrange(desc(cty))
mpg2
mpg2 <- mpg1 %>%
group_by(manufacturer) %>%
filter(class == 'suv') %>%
summarise(cty_avg = mean(cty)) %>%
arrange(desc(cty_avg))
mpg2
mpg2 <- mpg1 %>%
group_by(manufacturer) %>%
filter(class == 'suv') %>%
summarise(cty_avg = mean(cty)) %>%
arrange(desc(cty_avg)) %>%
head(7)
mpg2
ggplot(mpg2, aes(x = manufacturer, y= cty_avg, fill = manufacturer)) +
geom_bar(position= 'dodge',stat='identity')
# 9. 실습 데이터중 야구성적.csv 파일을 이용하여 다음의 그래프를 그리시오
# OPS(출류율 + 장타율)와 연봉대비OPS(OPS / 연봉 * 100)를 구하시오
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage3_StructuredData/EX31_프로야구')
options(digit = 4)
base <- read.csv('야구성적.csv')
str(base)
base1 <-base %>%
mutate(ops = 출루율 + 장타율)%>%
mutate(연봉대비ops = ops / 연봉 * 100)%>%
mutate(평균ops = sum(ops) / 25)%>%
mutate(ylabel = paste(sprintf("%4.1f", 연봉대비ops), '%', sep=''))
base2
base1
View(base1)
base1 <-base %>%
mutate(ops = 출루율 + 장타율)%>%
mutate(연봉대비ops = (ops / 연봉) * 100)%>%
mutate(평균ops = sum(ops) / 25)%>%
mutate(ylabel = paste(sprintf("%4.1f", 연봉대비ops), '%', sep=''))
View(base1)
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity') +
geom_text(aes(label=ylabel),color = 'black',vjust=-0.3,size=3) +
ggtitle(paste('연봉대비 OPS분석_선수별')) +
theme(plot.title=element_text(face="bold", size=10,
vjust=2, color="black")) +
geom_hline(yintercept=mean_ops_per_income, color='red', linetype = 'dashed', size=0.5)
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity') +
geom_text(aes(label=ylabel),color = 'black',vjust=-0.3,size=3) +
ggtitle(paste('연봉대비 OPS분석_선수별')) +
theme(plot.title=element_text(face="bold", size=10,
vjust=2, color="black")) +
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity') +
geom_text(aes(label=ylabel),color = 'black',vjust=-0.3,size=3) +
ggtitle(paste('연봉대비 OPS분석_선수별')) +
theme(plot.title=element_text(face="bold", size=10,
vjust=2, color="black"))
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity')
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity') +
geom_text(aes(label=ylabel),color = 'black',vjust=-0.3,size=3)
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity') +
geom_text(aes(label=ylabel),color = 'black',vjust=-0.3,size=3) +
ggtitle(paste('연봉대비 OPS분석_선수별')) +
theme(plot.title=element_text(face="bold", size=10,
vjust=2, color="black"))
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity') +
geom_text(aes(label=ylabel),color = 'black',vjust=-0.3,size=3) +
ggtitle(paste('연봉대비 OPS분석_선수별')) +
theme(plot.title=element_text(face="bold", size=10,
hjust=1, color="black"))
ggplot(base1, aes(x =선수명, y = 연봉대비출루율, fill = 선수명)) +
geom_bar(position= 'dodge', stat = 'identity') +
geom_text(aes(label=ylabel),color = 'black',vjust=-0.3,size=3) +
ggtitle(paste('연봉대비 OPS분석_선수별')) +
theme(plot.title=element_text(face="bold", size=10,
hjust=0.5, color="black"))
knitr::opts_chunk$set(echo = TRUE)
vec1 <- seq(1:6) ; vec1
vec2 <- seq(10,5,-1) ;vec2
vec3 <- seq()
vec4 <- seq()
vec5 <- seq(1,11,2) ; vec5
이름 <- c('강경학', '김태균', '이성열', '정은원') ; 이름
중간 <- c(90, 78, 94, 70)
기말 <- c(50, 60, 90, 92)
df_score <- data.frame(이름, 중간, 기말)
df_score
이름 <- c('강경학', '김태균', '이성열', '정은원') ; 이름
중간 <- c(90, 78, 94, 70)
기말 <- c(50, 60, 90, 92)
df_score <- data.frame(이름, 중간, 기말)
df_score
df_score2 <-df_score %>%
mutate(평균 = (중간 + 기말) / 2)
df_score2
df_score2 <-df_score %>%
mutate(평균 = (중간 + 기말) / 2)
df_score2
df_score2 <-df_score %>%
mutate(평균 = (중간 + 기말) / 2)
df_score2
library(dplyr)
이름 <- c('강경학', '김태균', '이성열', '정은원')
중간 <- c(90, 78, 94, 70)
기말 <- c(50, 60, 90, 92)
df_score <- data.frame(이름, 중간, 기말)
df_score2 <-df_score %>%
mutate(평균 = (중간 + 기말) / 2)
df_score2
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
df_score2 %>%
mutate(학점 = for (i in 1:length(df_score2$평균)) {
if(df_score2$평균[i] >=90) {
학점 <- c(학점,"A") }
else if(80 <=df_score2$평균[i] <=90) {
df_score2 <-df_score %>%
mutate(평균 = (중간 + 기말) / 2)
df_score2
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library()
library(ggplot2)

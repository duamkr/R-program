subcompact_cty <- filter(p3, class == 'subcompact') ; subcompact_cty
sub_cty <- filter(p3, class == 'suv') ; sub_cty
boxplot(compact_cty$cty)
boxplot(compact_cty$cty,
col=c('red'),
names=c('compact_cty'),
main='compact'))
boxplot(compact_cty$cty,
col='red',
names=c('compact_cty'),
main='compact'))
boxplot(compact_cty$cty,
col=c('red'),
names=c('compact_cty'),
main='compact')
p3 %>%
filter(class == c('compact', 'subcompact', 'suv'))
p4
p4 <- p3 %>%
filter(class == c('compact', 'subcompact', 'suv'))
p4
View(p4)
par(mfrow=c(3,1))
boxplot(compact_cty$cty,
col=c('red'),
names=c('compact_cty'),
main='compact')
boxplot(subcompact_cty$cty,
col=c('green'),
names=c('subcompact_cty'),
main='subcompact')
boxplot(suv_cty$cty,
col=c('yellow'),
names=c('suv_cty'),
main='suv')
par(mfrow=c(1,3))
boxplot(compact_cty$cty,
col=c('red'),
names=c('compact_cty'),
main='compact')
boxplot(subcompact_cty$cty,
col=c('green'),
names=c('subcompact_cty'),
main='subcompact')
boxplot(suv_cty$cty,
col=c('yellow'),
names=c('suv_cty'),
main='suv')
suv_cty <- filter(p3, class == 'suv') ; sub_cty
suv_cty <- filter(p3, class == 'suv') ; suv_cty
par(mfrow=c(1,3))
boxplot(compact_cty$cty,
col=c('red'),
names=c('compact_cty'),
main='compact')
boxplot(subcompact_cty$cty,
col=c('green'),
names=c('subcompact_cty'),
main='subcompact')
boxplot(suv_cty$cty,
col=c('yellow'),
names=c('suv_cty'),
main='suv')
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
Diamods
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
Diamomds
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
Diamonds
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
Diamonds
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
View(Diamonds)
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
library(ggplot2)
diamonds
View(diamonds)
View(diamonds)
# 2. cut에 따른 가격의 변화를 보여주는 그래프를 작성하세요.
ggplot(diamonds,aes(x=cut(),y=price)) +
geom_segment(aes(yend=price),xend=0)
# 2. cut에 따른 가격의 변화를 보여주는 그래프를 작성하세요.
ggplot(diamonds,aes(x=cut,y=price)) +
geom_segment(aes(yend=price),xend=0)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
p7 <-ggplot(diamonds,aes(x=cut, y=price))
p7 + geom_point(color='red') + geom_line()
p7
p7 + geom_point(color='red') + geom_line()
p6 <-ggplot(economics,aes(x=date, y=psavert))
p6 + geom_point(color='red') + geom_line()
p6
# 1. cut의 돗수를 보여주는 그래프를 작성하세요.
diamonds %>%
group_by(cut)%>%
summarise(cut_count = n()) %>%
arrange(desc(cut_count))
# 1. cut의 돗수를 보여주는 그래프를 작성하세요.
p9 <- diamonds %>%
group_by(cut)%>%
summarise(cut_count = n()) %>%
arrange(desc(cut_count))
ggplot(p9, aes(x=class,y=class_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=class,y=cut_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
p7 <-ggplot(diamonds,aes(x=price, y=cut))
p7 + geom_point(color='red') + geom_line()
# 2. cut에 따른 가격의 변화를 보여주는 그래프를 작성하세요.
ggplot(diamonds,aes(x=price,y=cut)) +
geom_segment(aes(yend=cut),xend=0)
p7 <-ggplot(diamonds,aes(x=price, y=cut)) +
geom_point(color='red') +
geom_line()
p7
p7 <-ggplot(diamonds,aes(x=cut, y=price)) +
geom_point(color='red') +
geom_line()
p7
theme_bw()
panel.grid.major.y = element_line(color="red", linetype="dashed"))
panel.grid.major.y = element_line(color="red", linetype="dashed"))
ggplot(diamonds,aes(x = cut, y=reorder(carat,price))) +
geom_point(size=2) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color="red", linetype="dashed"))
p10 <- diamonds
p10
p10 %>%
filter(cut == Fair)
p10 %>%
filter(cut == 'Fair')
ggplot(p10,aes(x = cut, y=reorder(carat,price))) +
geom_point(size=2) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color="red", linetype="dashed"))
p11<-p10 %>%
filter(cut == 'Fair')
ggplot(p11,aes(x = cut, y=reorder(carat,price))) +
geom_point(size=2) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color="red", linetype="dashed"))
ggplot(p11,aes(x = price, y=cut)) +
geom_point(size=2) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color="red", linetype="dashed"))
panel.grid.major.y = element_line(color="red", linetype="dashed"))
ggplot(p11,aes(x = price, y=reorder(cut,price))) +
geom_point(size=2) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color="red", linetype="dashed"))
p11<-p10 %>%
group_by(cut) %>%
summarise(cut_avg = mean(pirce))
p11<-p10 %>%
group_by(cut) %>%
summarise(cut_avg = mean(price))
p11<-p10 %>%
group_by(cut) %>%
summarise(cut_avg = mean(price)) , p11
p11<-p10 %>%
group_by(cut) %>%
summarise(cut_avg = mean(price)) ; p11
geom_bar()
p11<-p10 %>%
group_by(cut) %>%
summarise(cut_avg = mean(price)) ; p11
geom_bar(stat="identity")
p11<-p10 %>%
group_by(cut) %>%
summarise(cut_avg = mean(price)) ; p11
geom_bar(stat="identity")
geom_line(stat="identity")
geom_line(stat="identity",header=T)
geom_line(stat="identity")
geom_line(stat="identity")
p11<-p10 %>%
group_by(cut) %>%
summarise(cut_avg = mean(price),header=T) ; p11
ggplot(p11,aes(x=cut+avg, y=cut) +
geom_line(stat="identity")
geom_line(stat="identity")
geom_area(stat="identity")
geom_area(stat="identity")
geom_area(stat="identity")
ggplot(diamonds,aes(x=cut_avg, y=price)) +
geom_area(stat="identity")
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
library(ggplot2)
# Diamonds 데이터 셋을 이용하여 다음 문제를 해결하세요.
# 단, 컬러, 제목, x축, y축 등 그래프를 예쁘게 작성하세요.
library(ggplot2)
ggplot(diamonds,aes(x=cut_avg, y=price)) +
geom_area(stat="identity")
ggplot(diamonds,aes(x=cut, y=price)) +
geom_area(stat="identity")
ggplot(diamonds,aes(x=cut, y=price)) +
geom_line(stat="identity")
p11<-p10 %>%
group_by(cut) %>%
mutate(cumsum(price),cum_sum_price)
p11<-p10 %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price))
source('D:/Workspace/R_Data_Analysis/part4/오진영_2.R', encoding = 'UTF-8', echo=TRUE)
p10
p11<-p10 %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price)) ; p11
View(p11)
p12<-p10 %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price)) ; p12
p10 %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price)) ;
source('D:/Workspace/R_Data_Analysis/part4/오진영_2.R', encoding = 'UTF-8', echo=TRUE)
p10 %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price))
View(p10)
p12 <-p10 %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price))
p12 <-diamonds %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price))
# 2. cut에 따른 가격의 변화를 보여주는 그래프를 작성하세요.
library(dplyr)
p12 <-diamonds %>%
group_by(cut) %>%
mutate(cum_sum_price = cumsum(price))
p12
ggplot(p12,aes(x=cut, y=price)) +
geom_line(stat="identity")
View(p12)
ggplot(p12,aes(x=cut, y=cum_sum_price)) +
geom_line(stat="identity")
mutate(cum_sum_price = cumsum(price))
p12 <-diamonds %>%
group_by(cut) %>%
filter(cut == Fair) %>%
mutate(cum_sum_price = cumsum(price))
p12 <-diamonds %>%
group_by(cut) %>%
filter(cut == "Fair") %>%
mutate(cum_sum_price = cumsum(price))
p12
ggplot(p12,aes(x=price, y=cum_sum_price)) +
geom_line(stat="identity")
geom_line(stat="identity")
geom_line(stat="identity")
geom_line()
ggplot(p12,aes(x=price, y=reorder(price,cum_sum_price))) +
geom_line()
ggplot(p12,aes(x=price, y=reorder(cum_sum_price,price))) +
geom_line()
ggplot(p12,aes(x=price, y=reorder(cum_sum_price,cum_sum_price))) +
geom_line()
ggplot(p12,aes(x=price, y=cum_sum_price)) +
geom_line()
p12 <-diamonds %>%
group_by(cut) %>%
summarise(cut_sum = sum(price))
p12
p12 <-diamonds %>%
group_by(cut) %>%
summarise(cut_avg = mean(price))
p12
ggplot(p12,aes(x=cut, y=cum_avg)) +
geom_bar()
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar()
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity")
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue'))
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point()
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point(color='gray')
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3)
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3) +
geom_line()
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('right red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3) +
ggplot(p11,)
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('dark red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3) +
ggplot(p11,)
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('dark red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3)
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3)
ggplot(p12,aes(x=cut, y=cut_avg),title = 'Cut별 가격변화') +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3)
ggplot(mpg,aes(x=cty,y=hwy)) +
geom_point(stat="identity") +
ggtitle('mpg데이터 도시연비와 고속도로연비 산점도')
ggplot(mpg,aes(x=cty,y=hwy)) +
geom_point(stat="identity") +
ggtitle('mpg데이터 도시연비와 고속도로연비 산점도')
ggplot(mpg,aes(x=cty,y=hwy)) +
geom_point(stat="identity") +
ggtitle('mpg데이터 도시연비와 고속도로연비 산점도')
# 3. cut과 color에 따른 가격의 변화를 보여주는 그래프를 작성하세요.
diamonds
p2<- midwest
poptotal
ggplot(poptotal,aes(x=poptotal,y=popasian)) +
geom_point(stat="identity")
p3 <- mpg
p4 <- p3 %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
summarise(cty_avg = mean(cty))%>%
head(5)
ggplot(p4, aes(x=manufacturer,y=cty_avg)) +
geom_bar(stat="identity", fill="dark green", colour="red")
p4 <- p3 %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
summarise(cty_avg = mean(cty))%>%
arrange(desc(cty_avg))%>%
head(5)
ggplot(p4, aes(x=manufacturer,y=cty_avg)) +
geom_bar(stat="identity", fill="dark green", colour="red")
p4
ggplot(p4, aes(x=manufacturer,y=cty_avg)) +
geom_bar(stat="identity", fill=manufacturer)
ggplot(p4, aes(x=reorder(manufacturer,-cty_avg),y=cty_avg)) +
geom_col()
ggplot(p4, aes(x=reorder(manufacturer,-cty_avg),y=cty_avg,fill=manufacturer)) +
geom_col()
p3 <- mpg
p5 <- p3 %>%
group_by(class)%>%
summarise(class_count = n()) %>%
arrange(desc(class_count))
ggplot(p5, aes(x=class,y=class_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p5, aes(x=class,y=class_count)) + geom_col(stat="identity", fill= "grey", colour="white")
ggplot(p5, aes(x=class,y=class_count)) + geom_col()
bar
ggplot(p5, aes(x=class,y=class_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
economics
ggplot(economics,aes(x=date,y=psavert)) +
geom_segment(aes(yend=psavert),xend=0)
p6 <-ggplot(economics,aes(x=date, y=psavert))
p6 + geom_point(color='red') + geom_line()
par(mfrow=c(1,3))
boxplot(compact_cty$cty,
col=c('red'),
names=c('compact_cty'),
main='compact')
boxplot(subcompact_cty$cty,
col=c('green'),
names=c('subcompact_cty'),
main='subcompact')
boxplot(suv_cty$cty,
col=c('yellow'),
names=c('suv_cty'),
main='suv')
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count,fill=cut)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count,fill=cut)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count, fill=cut)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,fill=cut)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count, fill=cut)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count, fill=cut)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count, fill=cut)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count, fill=cut)) + geom_bar()
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill= cut, colour="white")
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill=cut, colour="white")
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill="gray", colour="white")
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3)
ggplot(p12,aes(x=cut, y=cut_avg, fill=cut)) +
geom_col()
# 3. cut과 color에 따른 가격의 변화를 보여주는 그래프를 작성하세요.
View(diamonds)
diamonds %>%
group_by(color)%>%
summarise(col_price_avg = mean(price))
p13 <- diamonds %>%
group_by(color)%>%
summarise(col_price_avg = mean(price))
p13
ggplot(p13,aes(x=color,fill=color)) + geom_col()
ggplot(p13,aes(x=color,y=col_price_avg,fill=color)) + geom_col()
knitr::opts_chunk$set(echo = TRUE)
ggplot(mpg,aes(x=cty,y=hwy)) +
geom_point(stat="identity") +
ggtitle('mpg데이터 도시연비와 고속도로연비 산점도')
ggplot(mpg,aes(x=cty,y=hwy)) +
geom_point(stat="identity") +
ggtitle('mpg데이터 도시연비와 고속도로연비 산점도')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(
echo = TRUE,
message = TRUE,
warning = TRUE
)
p2<- midwest
poptotal <- p2 %>%
filter(poptotal <= 500000, popasian <=10000)
poptotal
ggplot(poptotal,aes(x=poptotal,y=popasian)) +
geom_point(stat="identity")
p3 <- mpg
p4 <- p3 %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
summarise(cty_avg = mean(cty))%>%
arrange(desc(cty_avg))%>%
head(5)
p3 <- mpg
p4 <- p3 %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
summarise(cty_avg = mean(cty))%>%
arrange(desc(cty_avg))%>%
head(5)
ggplot(p4, aes(x=reorder(manufacturer,-cty_avg),y=cty_avg,fill=manufacturer)) +
geom_col()
p3 <- mpg
p5 <- p3 %>%
group_by(class)%>%
summarise(class_count = n()) %>%
arrange(desc(class_count))
ggplot(p5, aes(x=class,y=class_count)) + geom_bar(stat="identity", fill= "grey", colour="white")
p6 <-ggplot(economics,aes(x=date, y=psavert))
p6 + geom_point(color='red') + geom_line()
p3 <- mpg
compact_cty <- filter(p3, class == 'compact') ; compact_cty
subcompact_cty <- filter(p3, class == 'subcompact') ; subcompact_cty
suv_cty <- filter(p3, class == 'suv') ; suv_cty
par(mfrow=c(1,3))
boxplot(compact_cty$cty,
col=c('red'),
names=c('compact_cty'),
main='compact')
boxplot(subcompact_cty$cty,
col=c('green'),
names=c('subcompact_cty'),
main='subcompact')
boxplot(suv_cty$cty,
col=c('yellow'),
names=c('suv_cty'),
main='suv')
p9 <- diamonds %>%
group_by(cut)%>%
summarise(cut_count = n()) %>%
arrange(desc(cut_count))
ggplot(p9, aes(x=cut,y=cut_count)) + geom_bar(stat="identity", fill="gray", colour="white")
p12 <-diamonds %>%
group_by(cut) %>%
summarise(cut_avg = mean(price))
ggplot(p12,aes(x=cut, y=cut_avg)) +
geom_bar(stat="identity",fill=c('red','orange','yellow','green','blue')) +
geom_point(color='black', size = 3)
p13 <- diamonds %>%
group_by(color)%>%
summarise(col_price_avg = mean(price))
ggplot(p13,aes(x=color,y=col_price_avg,fill=color)) + geom_col()
# Part2_ Stage1
# 서울시 예제
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage1_WordCloud/EX01_Seoul')
install.packages('rJava')
library(rJava)
install.packages('KoNLP')
install.packages('wordcloud')
library(KoNLP)
library(wordcloud)
useSejongDic()
useSejongDic()
